<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Mutt0-ds Notes</title>
    <link>https://mutt0-ds.github.io/tags/python/</link>
    <description>Recent content in python on Mutt0-ds Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://mutt0-ds.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How I ended up with AI-generated Music Reviews on TikTok</title>
      <link>https://mutt0-ds.github.io/posts/2023/05/how-i-generated-automatic-reviews-tiktok/</link>
      <pubDate>Sun, 14 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://mutt0-ds.github.io/posts/2023/05/how-i-generated-automatic-reviews-tiktok/</guid>
      <description>This is a fun story, with a series of technologies and topics that I couldn&amp;rsquo;t believe they were capable of living together&amp;hellip; EDM, TikTok, Text-To-Speech, AI, Playwright&amp;hellip; Many times, when going down this over-engineered rabbit hole, I thought, &amp;ldquo;OK, I have to write about this thing.&amp;rdquo; And also, &amp;ldquo;What am I doing here with my time?&amp;rdquo;
ðŸ“š Some context So, here are a few key things to be aware of:</description>
    </item>
    
    <item>
      <title>Road to 100% Test Coverage on notion-sdk-py</title>
      <link>https://mutt0-ds.github.io/posts/2022/12/road-100-coverage-notion/</link>
      <pubDate>Mon, 26 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://mutt0-ds.github.io/posts/2022/12/road-100-coverage-notion/</guid>
      <description>There is something bizarre with me if two of my favourite activities are writing documentation and hitting my head against tests, which are notoriously unexciting activities for many developers ðŸ˜«
Luckily, we are all unique in our own way and I decided to contribute to the testing module of one of my favorite libraries, notion-sdk-py.
Being a certified Notion user, I use its Web App on a daily basis, and the Python library helps me automatically organize my notes.</description>
    </item>
    
    <item>
      <title>My Personal Airflow - How I&#39;m monitoring my scripts with Python, Appsmith and SQL Server</title>
      <link>https://mutt0-ds.github.io/posts/2022/03/personal-airflow/</link>
      <pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://mutt0-ds.github.io/posts/2022/03/personal-airflow/</guid>
      <description>Here&amp;rsquo;s the story of how I created my first full-stack project for monitoring my daily activities, using Python and SQL Server in backend and Appsmith for the GUI. I have a lot to learn and process yet, but hey, it&amp;rsquo;s a start.
ðŸ˜Ÿ The Problem There are scripts I&amp;rsquo;m using that are particularly tedious to monitor. The typical structure is the following:
Load data (from a file or manual input) Send a request to internal DB / very specific API Compare the data received with the input and if something is wrong, notify me or a colleague.</description>
    </item>
    
    <item>
      <title>Using a Neural Network for sending memes to my girlfriend</title>
      <link>https://mutt0-ds.github.io/posts/2021/05/nn-sending-memes/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://mutt0-ds.github.io/posts/2021/05/nn-sending-memes/</guid>
      <description>Well, my GF&amp;rsquo;s tastes in memes are simple: she loves wholesome memes and, most importantly, she loves animals.
That&amp;rsquo;s why I created a fun little project that:
Surfs the subreddit r/wholesomemes using the reddit API Downloads a few of the hottest memes in the contents folder Initializes a ResNet50 model that recognizes images containing any animal Sends them via mail to my GF (positively welcomed) Final email (3 memes by default) Reddit I&amp;rsquo;m using the praw library for downloading the memes, it requires a Reddit Bot enabled.</description>
    </item>
    
  </channel>
</rss>
